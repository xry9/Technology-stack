数据中台确实很有必要做, 以去哪儿网为例, 出报表的就多个数据组, 哪个数据组数都不太准, 就这个问题可能有三个原因, 抽数 口径 计算逻辑, 还暴露一个问题,
人员冗余, 计算浪费

2.1

我说一下吧, 我觉得数据中台是将数据高效地运用起来, 支撑更多的线上应用体现数据价值, 打通业务与数据
要求: a. 要有一站式平台提高数据的使用效率 b. 要有好的建模, 提高拓展性 c. 溯源能力, 即数不准怎么快速排查

图2-2

2.2 数据中台必备的4个核心能力
  1.汇聚整合 随着业务的多元化发展，企业内部往往有多个信息部门和数据中心，大量系统、功能和应用重复建设，存在巨大的数据资源、计算资源和人力资源的浪费，
同时组织壁垒也导致数据孤岛的出现，使得内外部数据难 以全局规划
  数据中台需要对数据进行整合和完善，提供适用、适配、成熟、完善的 一站式大数据平台工具，在简便有效的基础上，实现数据采集、交换等任务配置以及监控管理
  图2-4
  
2.3.1 数据中台VS业务中台
1.数据中台与业务中台的区别
  业务中台更多偏向于业务流程管控，将业务流程中共性的服务抽象出来，形成通用的服务能力。 比如电商平台，有C2C、B2C、C2B、B2B 四种模式，
其中订单、交易、商品管理、购物车等模块都是有共性的。 将这些组件沉淀出来，形成电商行业的业务中台，再基于这些业务中台 组件的服务能力，可以快速搭建前台
应用，譬如C2C模式的淘宝、B2C 模式的天猫、B2B模式的1688、C2B模式的聚划算，用户通过这些前台 业务触点使用业务服务。业务中台不直接面向终端用户，
但可以极大提升构建面向终端用户的前台的速度和效率。

  业务中台是抽象业务流程的共性形成通用业务服务能力，而数据中台则是抽象数据能力的共性形成通用数据服务能力。 比如，原始业务数据通过【资产化服务化】，
形成客户微观画像服务，这个服务可用于电商平台 的商品推荐，也可能用于地产购房意愿，还可能用于金融领域的信用评级等。同一个服务，在应用层面展现的内容
可能不一致，但是底层的数据体系是一致的。数据中台也将极大提升数据开发的效率，降低开发成 本，同时可以让整个数据场景更为智能化

2.3.2 数据中台VS数据仓库
  数据中台将企业数据仓库建设的投入价值进行最大化，以加快数据赋能业务的速度
2.4 数据中台VS现有信息架构
  ERP(Enterprise Resource Planning)
  如果有数据中台体系，可以通过中台机制汇聚相关系统中的原始 数据，并且面向轮胎这一公司经营的实体构建一系列场景化的标签特征。同时，通过离线或者实时的
数据交互模式，不断更新特征值，将业务场景所关注的数据的价值直接展现出来

2.5.2 技术价值：能力多、成本低、应用广
4.支持跨主题域访问数据
  企业早期建设的应用数据层ADS(传统数据仓库ODS/DW/ADS)更多 是为某个主题域所服务的，如营销域、人力资源域、风控域，而企业在 数据应用的时候往往需要打破
各个业务主题，会从业务对象主体出发来考虑数据应用，如人(会员、供应商、渠道、员工)和物(商品、仓库、合同)，从全域角度设计完整的面向对象的数据标签体系

图3-1
表3-1

3.2.4 4套建设内容
3.服务体系
  数据中台与大数据平台的最主要区别是数据能更方便地以服务化的方式 支撑业务，而这是通过数据中台服务体系实现的。服务体系是通过数据 中台的服务组件能力， 
把数据变为一种服务能力，比如客户微观画像 服务、信用评估服务、风险预警服务等，让数据能够方便地参与到业务 中并为业务带去价值

3.3 数据中台架构
图3-7 数据中台总体架构图

4.数据资产管理 通过数据体系建立起来的数据资产较为偏技术，业务人员比较难理解。 资产管理是以企业全员更好理解的方式，把企业的数据资产展现给企业
全员(当然要考虑权限和安全管控)，数据资产管理包括对数据资产目录、元数据、数据质量、数据血缘、数据生命周期等进行管理和展示，以一种更直观的方式展现
企业的数据资产，提升企业的数据意识

第 5 章

客户端埋点 常见的客户端埋点方式有三种：全埋点、可视化埋点和代码埋点
全埋点：将终端设备上用户的所有操作和内容都记录并保存下来，只 需要对内嵌SDK做一些初始配置就可以实现收集全部行为的目的。经常被称为无痕埋点、无埋点等
可视化埋点：将终端设备上用户的一部分操作，通过服务端配置的方式有选择性地记录并保存
代码埋点：根据需求来定制每次的收集内容，需要对相应的终端模块 进行升级。 针对这三种埋点方式，企业可以根据实际业务场景来判断和选择

可视化埋点适合于需要考虑存储和带宽成本的情形，可通过后端配置来 降低对象事件行为采集数量，实现机制和全埋点类似。其优点是发布后 不需要频繁升级，成本
比全埋点低，并且能够灵活配置
代码埋点主要适合于终端设计非标准化、事件行为需要通过代码来控制的情形。

5.2 数据交换产品
--上节中提到各数据采集产品的弊端, canal sqoop datax, datax 主要是不能采集非结构化的日志, 日志这块只能是 sdk/flume 了, 这块的原则是低偶合, 比如 rsink 
其实去哪儿日志采集还好, 有实时和离线两种方案, 没有资源浪费情况

6.1 数据计算能力的4种类型
笔者们将计算能力根据场景抽象分成四大类：
批计算、流计算
在线查询: 画像服务, 搜索的应用场景, 用 es 圈人
即席分析: impala presto kylin,olap  
  --其实我觉得针对这个须要有一个资源的划分, 为每个数据分析团队划分一定的资源, 来支撑他们的查询分析, 而且还要做到能监控查询的数据和任务执行时长
  
表6-1

7.1 数据体系规划
  各种系统产生的原始数据堆积在一起导致使用成本非常高，会经常出现命名不一、口径不一的问题，从而导致整个企业数据无法真正用起来

中台数据体系应具备以下特征： 
·覆盖全域数据：数据集中建设，覆盖所有业务过程数据，【业务在中台数据体系中总能找到需要的数据】
·结构层次清晰：纵向的数据分层，横向主题域、业务过程划分，让整个层次结构清晰易理解。 
·数据准确一致：定义一致性指标，统一命名、统一业务含义、统一计算口径，并有专业团队负责建模，保证数据的准确一致。 
·降低成本：数据体系的建设使得数据能被业务共享，这避免了大量烟 囱式的重复建设，节约了计算、存储和人力成本


贴源数据层ODS(Operational Data Store，又称操作数据层)
标签数据层TDM(Tag Data Model)：【面向对象建模】，对跨业务板块、 跨数据域的特定对象数据进行整合，通过ID-Mapping把各个业务板块、各个业务过程中的同一
对象的数据打通，形成对象的全域标签体系，方便深度分析、挖掘、应用

图7-3 统一数仓层建设过程

模型设计：以建模理论为基础，基于维度建模总线架构，构建一致性的维度和事实，同时设计出一套表命名规范
数据域：一个数据域对应一个宏观分析领域。数据域是有效归纳、组织业务过程的方式，同时方便定位指标/度量

一致性指标定义：指标归属到具体数据域，定义指标的含义、命名、类型、计算方法，确保指标的全局一致性

7.3.2 数据域划分
  数据域是指面向业务或数据进行本质分析，归纳总结出来的数据集合。为保障整个体系的生命力，数据域需要抽象提炼，并且长期维护和更新，但不轻易变动。
在划分数据域时，既能涵盖当前所有的业务需求， 又能在新业务进入时无影响地将其插进已有的数据域中或者扩展新的数据域

第三阶段：数据域定义
·数据域定义：根据业务分类的规律总结出划分业务范围的标准定义。 
·数据域命名：为每个数据域起一个专属名称，并附上英文全称和简称。

第四阶段：总线矩阵构建  
·关系梳理：明确每个数据域下有哪些业务过程，并梳理出业务过程与哪些维度相关
·矩阵构建：定义一张二维矩阵，将数据域下的业务过程与维度信息如实记录下来
图7-4
--我觉得主题应该是与业务有关的, 数据域应该是与数据类型/数据源有关的

7.3.3 指标设计
  指标就是在企业业务运转过程中产生的度量事实，一致性指标设计是为了在企业内外部使指标的命名、计算方法、业务理解达到一致，避免不 同部门同一个指标的
  数据对不上或者对同一个指标的数据理解不一致
  一致性指标的定义为，描述原子指标、修饰词、时间周期和派生指标的 含义、类型、命名、算法，被用于模型设计，是建模的基础
  图7-5

7.3.4 维度表设计
  维度属性设计中会有一些反规范化设计，把相关维度的属性也合并到主维度属性中，达到易用、少关联的效果
  维度表设计主要包括选择维度、确定主维表、梳理关联维表、定义维度 属性等过程
梳理关联维表： 数据仓库是业务源系统的数据整合，不同业务系统 或者同一业务系统中的表间存在关联性。根据对业务的梳理，确定哪些 表和主维表存在关联关系，
并选择其中的某些表用于生成维度属性。如 商品与类目、SPU、卖家、店铺等维度存在关联关系
  定义维度属性： 从主维表或关联维表中选择维度属性或生成新的维 度属性，过程中尽量生成更丰富、更通用的维度属性，并维护和描述维 度属性的层次及关联关系。
  如商品维表，商品属于类目，类目属于行 业。

7.3.5 事实表设计
  一般来说事实表由两部分组成：一部分是由主键和外键组成的键 值部分，另一部分是用来描述业务过程的事实度量
  为了提升事实表的易用性和性能，不仅会存储维度主键，还会把关键的维度 属性存储在实施表中。这样事实表就包含表达粒度的键值部分、事实度量及退化的维度属性。
一切数据应用和分析都是围绕事实表来展开的， 稳定的数据模型能大幅提高数据复用性
事务事实表：事务事实表描述业务过程事务层面的事实，每条记录代 表一个事务事件，保留事务事件活动的原始内容
累计快照事实表：累积快照事实表覆盖一个事务从开始到结束之间所 有的关键事件，覆盖事务的整个生命周期，通常具有多个日期字段来记 录关键事件时间点
--如果非要把生单和退款两组业务过程放一个表里可以做考虑用累计快照事实表来做

事实表设计可以遵循以下步骤：
  第一步：确定业务过程
  第二步：定义粒度
  第三步：确定维度: 定义粒度之后，事实表每一行的业务含义就确定了。那么业务人员会站 在哪些角度来描述事实度量？这就要确定维度了，常见的维度有时间、 区域、客户、产品、员工等。维度依附于粒度，是粒度的环境描述
  第四步：确定事实: 事实就是事实表度量的内容  
  第五步：冗余维度属性: 维度属性冗余与模型的稳定性是有矛盾的，因为维度的属性是有 可能改变的，如果属性已经冗余到事实表中，那么维度属性就与事实一起
  被记录到事实表中。如果后续维度属性值改变，由于事实表已经生 成，事实表的内容基本不会再做改变，这样就会出现已记录的维度属性 与真实的维度属性不一致，
  导致数据错误的情况
  
7.4 标签数据层建设——数据价值魅力所在
同一个对象的各种信息分散在不同的数据域并且有不同的数 据粒度。比如客户数据，基本信息在客户域按照客户粒度组织，交易信 息在交易域按照订单粒度组织，
社交信息在社交域按照关系对粒度组 织，这导致很难了解一个客户的全面信息，要通过各种关联计算才能满 足业务的需要，数据使用成本较高。而获取、分析客户的
全面数据，是多个业务的共同需求，这可以通过建设标签数据层来满足。【大数据的典型应用基本都是通过建立标签体系来支撑的】

7.4.1 相关概念
  标签数据层是面向对象建模，把一个对象各种标识打通归一，把跨业务 板块、数据域的对象数据在同一个粒度基础上组织起来打到对象上。
标签归属到一个对象，标签按照产生和计算方式不同可分为属性标签、统计标签、算法标签。对象本身的性质就是属性标签。对象在业务过程 事件中产生原子指标，
原子指标与修饰词、计算方法可以组装出统计标签。对象在多个业务过程的规律特征通过一定的计算方法可以计算出算法标签。
另外对象在特定的业务过程会与其他对象关联，关联对象的属性也可以作为标签打在主对象上。对象的属性标签、统计标签、算法标签与对象标签类目、对象标识
组装起来就生成对象标签表。对于对象标签表来说一切都是标签，并没有严格的维度与事实的区分，笔者称对象 标签表为标签融合表

图7-6 标签融合表建设过程

7.4.2 确定对象
经过对多个行业、多个标签体系建设经验的总结，可把对象分 为"人" "物" "关系" 三大类。其中"人"包括自然人、自然人群体、法人(2b 呗)
"物"包括物品、物体、物品集合等， 例如商品、仓库等，是行为中的被施与对象
关系指的是人、物、人和 物、人和人、物和物在某时某刻发生的某种行为、关联、关系，包括行为关系、归属关系、思维关系等各种强弱关系，例如购物、运货、聊天、
监管等, 因为关系很重要，企业大多数情况下反而是在对关系进行定义、反复发生、记录、分析、优化，因此需要"关系"这种对象存在，对关系进行属性描述和研究
关系按照产生的动因不同，又分为事实关系 和归属关系，事实关系会产生可量化的事实度量，归属关系只是一种归属属性
明确了对象的定义和分类，就可以根据业务的需要确定要对哪些对象建立标签体系

7.4.3 对象ID打通
  医保账号进 行挂号缴费；缴纳水电煤费用时，又有不同的水表账号、电表账号、天 然气账号；购买了手机又有手机的设备账号；上网购物会有电商账号， 
上网聊天会有聊天应用账号……通过不同账号
7.4.4 标签类目设计

企业业务需要使用的标签项一般都会非常之多，当标签项超过50个时， 业务人员要使用或查找标签就开始变得麻烦，管理标签也会变得困难
图7-7 标签对象示例
图7-9 某银行客户标签类目体系示例
  以一家 服务企业的标签类目体系为例，汇总后包含加盟商(人)的标签类目体 系、员工(人)的标签类目体系、消费者(人)的标签类目体系、门店 (物)的标签类目体系、
仓库(物)的标签类目体系、商品(物)的标 签类目体系、交易记录(关系)的标签类目体系、库存记录(关系)的 标签类目体系、要货记录(关系)的标签类目体系、
销量趋势(关系) 的标签类目体系、库存预警(关系)的标签类目体系、订货辅助(关 系)的标签类目体系
图7-10 某服装企业标签对象
图7-11 标签设计的两大前提

1）标签必须是业务上需要的，能体现业务价值，帮助业务人员做出业
务判断或者能创造性的地唤醒新业务场景的数据项，在业务中往往会称其为属性、特征、指标、参数等
对对象具体属性、特征、信息、内容的字段级刻画，是标签
对对象属性、特征、信息、内容的具体取值，是标签值

图7-12 标签设计文档截图
7.4.6 标签融合表设计
对象的标签体系是对象有价值数据的全域标签，跨业务板块、跨主题， 包括属性标签、统计标签、算法标签，比如性别、到达次数、消费额、 品牌偏好都是标签。
特定对象的标签体系是面向对象组织数据，对于标签表来说并没有维度和事实的区分，所以标签表又称为标签融合表。

模型稳定性：纵表模型比较稳定，要增加新的标签时增加记录即可 而无须修改模型结构；横表模型不稳定，只要增加或者修改标签元数据，都会涉及模型的修改

图7-13 标签类目与融合表对应关系

7.5 应用数据层建设——灵活支撑业务需求
  统一数仓层和标签数据层数据相对稳定，然而最终用户的需求和使用方 式是千变万化的，统一数仓层和标签数据层无法灵活适应各类用户的使 用需求。
  另外最终用户使用数据也需要灵活性和高性能，而这与规范是 矛盾的，因为按规范进行建设就会把数据按照各种域、业务过程、维 度、粒度等拆分，使用的时候需要
  各种连接，这样就无法满足对灵活、 高性能的要求。为了解决规范稳定与灵活、高性能之间的矛盾，要增加 应用数据层

7.5.1 相关概念
  应用数据层是按照业务使用的需要，组织已经加工好的数据以及一些面 向业务的特定个性化指标加工，以满足最终业务应用的场景。应用数据 层一般也是采用维度
  建模的方法，但是为了满足业务的个性需求以及性 能的要求，会有一些反规范化的操作，所以应用数据层并没有非常规范 的建设标准。 应用数据层类似于传统的
  数据集市，但是比数据集市更轻量化、更灵 活，用于解决特定的业务问题

7.5.2 应用数据表设计
  应用数据层是在统一数仓层、标签数据层都已经建设好的基础上，面向 特定业务需求而准备的个性数据组装层，除了特殊的业务个性标签需要 单独加工外，
  其他尽可能复用统一数仓层和标签数据层的建设成果
  
图7-14 一套数据多套存储计算环境
图7-15 客户标签体系

图8-1 数据资产管理的位置

8.5 数据治理
8.5.1 数据治理的6个目标
提升数据质量，帮助做出基于数据的更高效、更准确的决策； 
·构建统一的、可执行的数据标准； 
·良好地响应数据生产者、消费者、数据处理技术人员等数据利益相关 者的需求，如保护好客户(数据生产者)的数据隐私和数据安全； 
·实现可重复的数据管理流程，并确保流程透明； 
--总结一下就是: 数据规范 数据安全 数据平台

8.5.2 数据治理的6个原则
·标准化原则：
·透明原则：除了一些需要保密的安全措施之外，数据治理相关的文件、数据问题的发现等，都应该是公开透明的，相关人员应该清楚正在发生的事情，以及事情发生后应如何按照原则处理。 
·数据的认责与问责：数据治理必须解决无人问责的问题，比如将很多 岗位列为负责人，最终却没有人真正负责。数据的认责是数据治理的先 决条件，数据的问责和考核制度是确保数据治理工作真正落地的制度保 障。
·平衡原则：在大数据时代，时时刻刻都在涌现海量数据。在进行数据 治理工作的过程中，必须在代价和收益之间取得平衡。往往没有必要追 求百分之百的数据质量，而对于历史遗留数据，数据标准也不可能对其 进行完全约束。很多时候，对于企业来说，数据可商用是平衡原则的重 要参考
·变更原则：随着市场和业务的不断发展，数据标准、元数据、数据质 量等要求并不是一成不变的，既要控制数据的变更流程，也要主动适应 这些变化，推动标准更新。 
·持续改进原则：业务在不断变化，数据在持续产生，数据治理非朝夕 之功，需要持续推动，不断改进，形成长效机制。


8.7 数据资产管理职能
8.7.3 元数据管理
元数据是描述数据的数据
元数据管理是数据治理的核心和基础

2.元数据从何而来
技术元数据：库表结构、字段约束、数据模型、ETL程序、SQL程序 等
业务元数据：业务指标、业务代码、业务术语等
管理元数据：数据所有者、数据质量定责、数据安全等级等

8.7.5 数据质量管理
  数据质量管理主要用来解决"数据质量现状如何，谁来改进，如何提 高，怎样考核"的问题。在关系型数据库时代，做数据治理最主要的目 的是提升数据质量，让报表、
分析、应用更加准确做数据质量管理，首先要搞清楚数据质量问题产生的原因。原因有很多 方面，比如技术、管理、流程等。造成质量问题的原因通常很复杂，比如
企业的信息系统一般是由外部的供应商承建的，在建设过程中，这些系统使用当时条件下不同的标准生产和使用数据，甚至没有标准，只有 当时的IT人员自己的"标准"。
这就导致系统间存在大量的重复数据、脏 数据、不同口径的数据

3.数据质量评估的标准
准确性： 描述数据是否与其对应客观实体的特征一致。 举例：用户的住址是否准确；某个字段规定应该是英文字符，在其位置 上是否存在乱码。
完整性： 描述数据是否存在缺失记录或缺失字段。 举例：某个字段不能为null或空字符
一致性： 描述同一实体同一属性的值在不同的系统中是否一致。 举例：男女是否在不同的库表中都使用同一种表述。例如在A系统中， 男性表述为1，女性表述为0；在B系统中，男性表述为M，女性表述为 F。
有效性： 描述数据是否满足用户定义的条件或在一定的取值范围 内。举例：年龄的值域在0~200之间。另一个枚举的有效性例子是银行的币 种代码。
唯一性： 描述数据是否存在重复记录。 举例：身份证号码不能重复，学号不能重复
及时性： 描述数据的产生和供应是否及时。 举例：生产数据必须在凌晨2：00入库到ODS(Operational Data Store， 操作数据层)
稳定性： 描述数据的波动是否稳定，是否在其有效范围内。 举例：产品质量抽样统计的合格率，不会有超过20%的波动范围。
连续性： 描述数据的编号是否连续。 举例：有关部门处理环保违法案件，案件的编号必须是连续的
合理性： 描述两个字段之间逻辑关系是否合理。 举例：企业注销时间必须晚于注册时间，自然人的死亡时间必须晚于出 生时间

8.7.9 生命周期管理 数据资产管理过程中，生命周期的管理也是非常重要的部分，每一类数 据都有其价值周期，要设置一个合理的数据生命周期需要考虑各方面的 因素。
在数据中台的实践过程中，首先会将数据分成两类：不可恢复的 数据与可恢复的数据。一般涉及原始数据的，都会被定义为不可恢复数 据，即清除后没办法找回来；
而一些中间过程或者结果数据，只要原始 数据在并且相关的加工逻辑在，都可以被重新加工恢复。因此在生命周 期的管理策略上，也需要区别对待。 
(1)不可恢复数据 一般建议策略为永久保存，在实际实施过程中可以根据企业各方面因素 来综合考虑。数据当前没价值不代表未来没有价值，只是当前的技术、 
认知和场景没有办法使用其中的价值。当然也需要从企业成本考虑，如 果什么数据都存，成本部分又无法承受，那反而会将数据变成一种负 债，拖累企业发展。
在实施过程中，可以考虑冷数据用低价存储的方 式，未来需要使用时再进行恢复，虽然可能会有一些效率上的浪费，但 和实际的资金成本平衡后也是常常会选择的方式。
(2)可恢复的数据 这类数据只需要有原始数据和加工模型在，就可以通过平台的调度策略 进行恢复，因此这类数据的生命周期一般会根据实际使用情况来灵活调 整。
平台侧可以根据数据使用情况，推荐具体的生命周期保留时长，用 户也可以自主选择设置，让生命周期的设置符合实际企业需要。 生命周期管理提供生命周期的设置和
自动清理功能，还提供了生命周期 建议的功能，即结合数据的热度、存储量变化情况给用户建议的生命周 期，帮助用户合理配置。
8.7.10 标签管理

第9章 数据服务体系建设
图9-1 数据中台总体架构图
9.1.3 核心价值
(1)确保数据在业务层的全域流通
  数据服务可以对数据中台的全量数据进行封装透出，让中台的数据支撑 数据业务，加速数据业务化的流程；数据业务产生的反馈数据可以回流 到数据中台中，不断优化现有的数据服务，让数据在业务中持续流动起 来。
  
(2)降低数据接口的重复建设
  前端不同的数据应用对数据的需求有些是类似的，例如客户画像和客户 精准营销都对客户的特征标签有需求，通过统一的数据服务创建的包含 客户特征数据的接口，可以通过授权分别提供给画像和营销两个应用。 与以前的烟囱式开发相比，这样做的好处是可以避免数据接口的重复建 设。通过一次创建、多次授权的方式交付给前端
(3)保障数据获取的及时性和稳定高效
通过统一的数据服务，对于不同业务部门给数据中台提的数据需求，中 台管理方可以进行统一规划和分配，从整体上保证资源和需求的协调。 同时，通过数据服务中的数据，中台可以及时得到业务上的完整反馈信 息，并基于真实数据及时调整：若需要及时的数据，则给予实时性的保 障；若需要稳定的数据，则给予可用性的保障
(4)使能数据能力扩展
通过统一数据中台，不断扩展数据源、优化数据资产建设、扩展数据服 务封装方式，将数据能力进行持续扩展，不断给数据业务和数据应用提 供更多数据价值
9.2 4种常见的数据服务
图9-2 4种常见的数据服务类型

9.2.2 分析服务
  分析服务通过各种数据统计分析的方法，对数据做任意维度的数据分析 挖掘，让数据分析人员快速了解数据集的特点，以支持数据化运营、分 析决策等场景。
  常见的如BI工具、数据化运营中的路径分析、漏斗模型 等，大部分是基于这种能力来构建的

图9-15 典型智能应用总览

图10-7 数据资产——如何让标签更易理解

10.4.2 四种关键优化策略，破解计算成本控制难题
  仔细读啊, 经典...

11.3.3 数据加密
将现代密码技术分为两类：对称加密算法(秘密 钥匙加密)和非对称加密算法(公开密钥加密)
DES 数据加密标准(Data Encryption Standard), 简称 DES 还有 RC4, 是对称加密. 而 RSA(就是他们三人姓氏开头字母拼在一起组成的), 是非对称加密

11.3.4 数据脱敏

2.敏感数据脱敏 数据脱敏方法可根据用户需求的不同而进行定制，最常见的脱敏方式包 括如下几种形式： 
  ·数据替换：以虚构数据代替数据的真实值。 
  ·截断、加密、隐藏或使之无效：以"无效"或"*****"等代替数据的真实值
  ·随机化：以随机数据代替数据的真实值。 
  ·偏移：通过随机移位改变数字型的数据。

11.3.5 数据共享安全
  数据对外共享一般包括两种方式：接口和文件。 接口方式包括接口数据(JSON/XML)、流式数据(Kafka)等多种数 据访问方式。通过【API操作权限管理】、API流量管控、
API认证管理等手 段实现接口管控。 文件方式主要指通过FTP、SFTP、邮件等对外共享数据，数据类型包括 TXT、CSV、Word、PPT、Excel、HTML等，通过数字暗水印
进行安全 防护。数字暗水印通过对共享的文件嵌入暗水印作为标记一起传输，保 障数据在发生泄露时，能够提取水印信息并追踪至责任人，达到事后安 全保护的目的，
解决了数据泄露后无法追踪、难以定责、难以避免再发生的问题

11.3.7 数据安全的其他技术
数字水印技术
数字水印是指将标识信息以难以察觉的方式嵌入数据载体内部且不影响 其使用方法，多见于多媒体数据版权保护，也有针对数据库和文本文件 的水印方案。
数字水印技术能保障数据在发生泄露时，能够提取水印信 息并追踪至责任人。

数据溯源技术

附录 6大行业解决方案架构图
