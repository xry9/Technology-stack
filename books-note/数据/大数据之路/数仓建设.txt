4、我觉得去哪机票是个主题域
主题包括:
代理商: 主要给他们出报表, 出了多少票, 怎样收佣金
用户/乘机人(就是客户啊, 出行分析, 分群打标, 主要分析行为数据) 
券主题(机票 优惠券 保险 代金券 接机 机场大巴, 细分的话可以分为这三个子主题么) 订单应该算产品里的吧, 其它几个主题中也包含订单
销售/收益: 还是有必要有这个主题, 因为看看人家 https://www.cnblogs.com/HondaHsu/p/4313053.html
  还有算收益 base_income

1、数仓建设流程:
业务过程: booking, 下单, 支付, 出票 


前置条件: 
  事实表: 不同业务线的相似表要合并, 如果差异较大不得不搞主从表, 这应该叫垂直拆分吧, 如果差异大直接水平拆分多表了, 
    国内国际放在一起: order_id, username, arr_city, dept_city, order_amount, create_time

订单事实表 与 订单明细/交易表 的合并, 杂项维度和微型维度, 哪个先哪个后, 是个困扰人的问题, 但不管怎么说相似业务线的表是要合并的
以垂直拆分为例: 
  维度表: 只确实水平拆分和垂直拆分, 此处要先做, 事实表的退化需要依赖于此
  事实表: 先确实好宽表字段, 然后合并订单表与 订单明细/交易表, 肯定覆盖了宽表字段, 然后拆表
微型维度: 变化频繁, 航班标准票价, 上架/下架时间、用户 VIP 等级、用户信用评价/航班延误率...阿里说没有维护历史信息, 我觉得也可以做拉链啊
类似的维度, 都和事实相关, 如交易、物流等, 称之为"行为维度", 或"事实衍生的维度", 是否购买保险保险金额(这种看统计)
杂项维度: 交易留言, 是否邮寄行程单/行程单邮寄地址, 是否联系客服, 代理商, 是否有儿童
--我定义一下, 事实表中拆出的维度都叫杂项维度, 维度表拆出的维度都是微型维度, 还有 是否学生/是否使用优惠券/同行人数 叫衍生维度吧

-------------------------
ods: 拉数据合分表
  事实事抽增量, 维表根据是否有更新, 更新如果大表抽增量, 小表抽全量(当然也要做到要合的表统一)
	--会不会存在没有时间字段的情况, 即便有也是可以与其它表关联起来的

dwd: 在这一层分主题了
  维度表: 快照维表什么都不做, 如果维表拉增量, 则与历史数据合并一下
  事实表拉宽表
    a. 并不是主子订单合并, 还是有航段表做为子订单, 有些维度表也要合到宽表中(还会添加字段,衍生维度: 航段数/payok/是否学生/是否使用优惠券/同行人数等, 
	行为维度:订单状态及其改变时间), 比如有的业务线订单分多个表(订单主表, 明细/交易(支付时间 发货时间 优惠券额度...)/航段表)
	b. 合完之后还要做去重
      所以怎么与历史数据去重, 不可以每个状态都存一条, 因为 sql 写起来太麻烦, 数据还冗余, 加一个 payok 比较科学, 未支付的按创建时间进分区, 支付的按支付时间进分区, 始终中保留一条数据
	c. 这一层如果用 ER 模型的话, 把模型建好之后不一定要拉宽表, 去重肯定是要去的

dws:
  拆分:
    维度表: 只确定水平拆分和垂直拆分, 垂直拆分的话拆完了之后 union 合并, 当然经常变化一列也要拆出来, 这些字段也是确实垂直拆分时就定下来的(用户积分, 商品价格)
	事实表: 有些事实表字段要拆到维表中(微型维度, 杂项维度,杂项维度也可能是交易表写进去的), 比如订单表结构中有聊天记录得必须要拆出去
	  拆完了 union 合并就行了
	补充一点, 周期快照 累计快照 也在 dws 里
    ******还有一个我经常说的 微型维度 机票价格 到底算维度还是事实, 事实表里也是存了的呀。 

很多企业里在 ods 之上会有一个专门做规一化的层, 其实这层真的没必要, 或者规一化完成之后删了就行, 不能算一层

Application Data Store, ADS
第三层主是要周期快照事实表, 同比环比
第四层不只报表啊, 还有一些数据挖掘, 出行往返、火推机等(产品和数据分析师的活儿, 基本都是临时或者几天的也可能建表)


2、表的生命周期:
拉链/merge: 维表如有变化, 超过一个月做拉链, 事实表一年前的做一次合并
  a. ods 层是不能长久保存的, 因为太多重复数据(保留1年)
  b. 维表是要做拉链的
  c. 事实表存 dwd/dws 都行, 因为两层字段拆分关系, 数都是一样的, 超过两个可以按月合表, 而且拉链之后最好建新表, 这样可以避免字段增加的困扰
  d. 商品(航班/航段)表这种, 事实表端要做拉链, 维表端, 保留三年的拉链
  e. 事实表拆出的杂项维度不需要保留太长时间, 阿里好像也是没保留
  e. 老数可以用 擦除编码

3、一般问题:
  a. 手机号, 身份证号, 护照号怎么加密, 用一种对称加密算法就行了

4、复杂问题:
a. 乘机人表肯定是维表了, 但是数同步肯定会面临一些问题, 如果 mysql 中每个订单都把乘机人信息存全了还好, 如果不全, 而乘机人这种大表往往是存在 es/hbase 中
我们现在的做法是乘机是相当于快照维表, 航段不适合做维表, 道像是子订单, 即实事表
航班要不是做一张维表, 还是只集成在事实表中, 做成维表其实意义不大呀, 目前是没太大必要, 但考虑到代理商主题可能会用到, 在代理商(他们可能要算不同航段的
收益, 他们会从我们要这种数据的)主题中可以再解析(引申一个问题: 表在不同主题的表现), 

b. 维表拉链时, 计算起始结束时间时, lag 现在功能好像够用, 但是分组内的 row_number, sum, avg, max, count... 也是有的, 但是 lag 最后一列这种是不行的, 
是否同网吧是否临座问题
有些数可以不单纯的在 mysql 中, 比如商品/乘机人, 可以存在 hbase, 同步数时怎么办, hbase 不可能每天同步全量, 增量的话可不可以解析 wal 日志

5、缓慢变化维的数据在事实表里存一份是不是很好啊



=============================
https://blog.csdn.net/Luomingkui1109/article/details/91349335
http://www.woshipm.com/pmd/1418055.html
https://baijiahao.baidu.com/s?id=1649349568939493055&wfr=spider&for=pc
https://blog.csdn.net/biwenjun999/article/details/87619858

指标不成体系怎么样
  -- 我觉得 指标体系是指导数仓建设的, 数仓搭建前期如没有指标体系, 其实只能按线上业务表划分, 可能是我把这事想简单了, 如果线上表过多, 其实开发人员维度建模很难搞赢

数据模型就是数据组织和存储方法，它强调从业务、数据存取和使用角度合理存储数据。
质量：良好的数据模型能改善数据统计口径的不一致性，减少数据计算错误的可能性。数据模型能够促进业务与技术进行有效沟通，形成对主要业务定义和术语的统一认识，
具有跨部门、中性的特征，可以表达和涵盖所有的业务

--数据建模/分层+宽表, 确实是有好处的, 屏蔽数据源的变化对业务的影响, 变的只是 etl, 即动一处保多处不变
数据仓库分层的设计好处:
清晰数据结构：每一个数据分层都有它的作用域，这样我们在使用表的时候能更方便地定位和理解。
数据血缘追踪：能够快速准确地定位到问题，并清楚它的危害范围。
减少重复开发：规范数据分层，开发一些通用的中间层数据，能够减少极大的重复计算。
把复杂问题简单化：将复杂的任务分解成多个步骤来完成，每一层只处理单一的步骤，比较简单和容易理解。当数据出现问题之后，不用修复所有的数据，只需要从有问题的步骤开始修复。
屏蔽原始数据的异常：不必改一次业务就需要重新接入数据
